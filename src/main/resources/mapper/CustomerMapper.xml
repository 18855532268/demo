<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.manage.mapper.CustomerMapper">
  <resultMap id="BaseResultMap" type="com.example.manage.domain.Customer">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="customer_num" jdbcType="VARCHAR" property="customerNum" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="country" jdbcType="VARCHAR" property="country" />
    <result column="customer_type_id" jdbcType="BIGINT" property="customerTypeId" />
    <result column="linkman_name" jdbcType="VARCHAR" property="linkmanName" />
    <result column="linkman_cellphone" jdbcType="VARCHAR" property="linkmanCellphone" />
    <result column="wechat" jdbcType="VARCHAR" property="wechat" />
    <result column="postal_code" jdbcType="VARCHAR" property="postalCode" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, customer_num, `name`, province, country, customer_type_id, linkman_name, linkman_cellphone, 
    wechat, postal_code, address, remark, `status`
  </sql>
  <select id="selectByExample" parameterType="com.example.manage.mapper.CustomerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from customer
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.manage.mapper.CustomerExample">
    delete from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.manage.domain.Customer" useGeneratedKeys="true">
    insert into customer (customer_num, `name`, province, 
      country, customer_type_id, linkman_name, 
      linkman_cellphone, wechat, postal_code, 
      address, remark, `status`
      )
    values (#{customerNum,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, 
      #{country,jdbcType=VARCHAR}, #{customerTypeId,jdbcType=BIGINT}, #{linkmanName,jdbcType=VARCHAR}, 
      #{linkmanCellphone,jdbcType=VARCHAR}, #{wechat,jdbcType=VARCHAR}, #{postalCode,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.manage.domain.Customer" useGeneratedKeys="true">
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="customerNum != null">
        customer_num,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="customerTypeId != null">
        customer_type_id,
      </if>
      <if test="linkmanName != null">
        linkman_name,
      </if>
      <if test="linkmanCellphone != null">
        linkman_cellphone,
      </if>
      <if test="wechat != null">
        wechat,
      </if>
      <if test="postalCode != null">
        postal_code,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="customerNum != null">
        #{customerNum,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="customerTypeId != null">
        #{customerTypeId,jdbcType=BIGINT},
      </if>
      <if test="linkmanName != null">
        #{linkmanName,jdbcType=VARCHAR},
      </if>
      <if test="linkmanCellphone != null">
        #{linkmanCellphone,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null">
        #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="postalCode != null">
        #{postalCode,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.manage.mapper.CustomerExample" resultType="java.lang.Long">
    select count(*) from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update customer
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.customerNum != null">
        customer_num = #{record.customerNum,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.country != null">
        country = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.customerTypeId != null">
        customer_type_id = #{record.customerTypeId,jdbcType=BIGINT},
      </if>
      <if test="record.linkmanName != null">
        linkman_name = #{record.linkmanName,jdbcType=VARCHAR},
      </if>
      <if test="record.linkmanCellphone != null">
        linkman_cellphone = #{record.linkmanCellphone,jdbcType=VARCHAR},
      </if>
      <if test="record.wechat != null">
        wechat = #{record.wechat,jdbcType=VARCHAR},
      </if>
      <if test="record.postalCode != null">
        postal_code = #{record.postalCode,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update customer
    set id = #{record.id,jdbcType=BIGINT},
      customer_num = #{record.customerNum,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      province = #{record.province,jdbcType=VARCHAR},
      country = #{record.country,jdbcType=VARCHAR},
      customer_type_id = #{record.customerTypeId,jdbcType=BIGINT},
      linkman_name = #{record.linkmanName,jdbcType=VARCHAR},
      linkman_cellphone = #{record.linkmanCellphone,jdbcType=VARCHAR},
      wechat = #{record.wechat,jdbcType=VARCHAR},
      postal_code = #{record.postalCode,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.manage.domain.Customer">
    update customer
    <set>
      <if test="customerNum != null">
        customer_num = #{customerNum,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="customerTypeId != null">
        customer_type_id = #{customerTypeId,jdbcType=BIGINT},
      </if>
      <if test="linkmanName != null">
        linkman_name = #{linkmanName,jdbcType=VARCHAR},
      </if>
      <if test="linkmanCellphone != null">
        linkman_cellphone = #{linkmanCellphone,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null">
        wechat = #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="postalCode != null">
        postal_code = #{postalCode,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.manage.domain.Customer">
    update customer
    set customer_num = #{customerNum,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      customer_type_id = #{customerTypeId,jdbcType=BIGINT},
      linkman_name = #{linkmanName,jdbcType=VARCHAR},
      linkman_cellphone = #{linkmanCellphone,jdbcType=VARCHAR},
      wechat = #{wechat,jdbcType=VARCHAR},
      postal_code = #{postalCode,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="findPage" resultType="com.example.manage.domain.Customer">
        <bind name="CUSTOMER_STATUS_DELETE" value="@com.example.manage.constant.ConstantsForDomain@CUSTOMER_STATUS_DELETE" />
        select *
        from customer c
        where c.status != #{CUSTOMER_STATUS_DELETE}
        limit #{pageRequest.offset}, #{pageRequest.pageSize}
    </select>
    <select id="findCountByStatus" resultType="java.lang.Long">
        <bind name="CUSTOMER_STATUS_DELETE" value="@com.example.manage.constant.ConstantsForDomain@CUSTOMER_STATUS_DELETE" />
        select count(*)
        from customer c
        where c.status != #{CUSTOMER_STATUS_DELETE}
    </select>
    <select id="selectByIdAndStatus" parameterType="java.lang.String" resultType="com.example.manage.domain.Customer">
        <bind name="CUSTOMER_STATUS_DELETE" value="@com.example.manage.constant.ConstantsForDomain@CUSTOMER_STATUS_DELETE" />
        select *
        from customer c
        where c.id = #{id} and c.status != #{CUSTOMER_STATUS_DELETE}
    </select>
</mapper>