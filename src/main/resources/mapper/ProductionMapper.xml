<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.manage.mapper.ProductionMapper">
  <resultMap id="BaseResultMap" type="com.example.manage.domain.Production">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="payOrderId" jdbcType="BIGINT" property="payorderid" />
    <result column="customerId" jdbcType="BIGINT" property="customerid" />
    <result column="productId" jdbcType="BIGINT" property="productid" />
    <result column="cargoTypeId" jdbcType="BIGINT" property="cargotypeid" />
    <result column="productionTypeId" jdbcType="BIGINT" property="productiontypeid" />
    <result column="flowId" jdbcType="BIGINT" property="flowid" />
    <result column="factoryId" jdbcType="BIGINT" property="factoryid" />
    <result column="productionManageId" jdbcType="BIGINT" property="productionmanageid" />
    <result column="enterStoreManageId" jdbcType="BIGINT" property="enterstoremanageid" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="proNum" jdbcType="INTEGER" property="pronum" />
    <result column="proDeliveryDate" jdbcType="TIMESTAMP" property="prodeliverydate" />
    <result column="stateCov" jdbcType="VARCHAR" property="statecov" />
    <result column="weight" jdbcType="VARCHAR" property="weight" />
    <result column="larghezza" jdbcType="VARCHAR" property="larghezza" />
    <result column="weightTolerance" jdbcType="VARCHAR" property="weighttolerance" />
    <result column="lossRate" jdbcType="VARCHAR" property="lossrate" />
    <result column="color" jdbcType="VARCHAR" property="color" />
    <result column="isBatchCharge" jdbcType="VARCHAR" property="isbatchcharge" />
    <result column="announcements" jdbcType="VARCHAR" property="announcements" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="grayNum" jdbcType="INTEGER" property="graynum" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, payOrderId, customerId, productId, cargoTypeId, productionTypeId, flowId, factoryId, 
    productionManageId, enterStoreManageId, `count`, proNum, proDeliveryDate, stateCov, 
    weight, larghezza, weightTolerance, lossRate, color, isBatchCharge, announcements, 
    remark, grayNum, `status`
  </sql>
  <select id="selectByExample" parameterType="com.example.manage.mapper.ProductionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from production
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from production
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from production
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.manage.mapper.ProductionExample">
    delete from production
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.manage.domain.Production" useGeneratedKeys="true">
    insert into production (payOrderId, customerId, productId, 
      cargoTypeId, productionTypeId, flowId, 
      factoryId, productionManageId, enterStoreManageId, 
      `count`, proNum, proDeliveryDate, 
      stateCov, weight, larghezza, 
      weightTolerance, lossRate, color, 
      isBatchCharge, announcements, remark, 
      grayNum, `status`)
    values (#{payorderid,jdbcType=BIGINT}, #{customerid,jdbcType=BIGINT}, #{productid,jdbcType=BIGINT}, 
      #{cargotypeid,jdbcType=BIGINT}, #{productiontypeid,jdbcType=BIGINT}, #{flowid,jdbcType=BIGINT}, 
      #{factoryid,jdbcType=BIGINT}, #{productionmanageid,jdbcType=BIGINT}, #{enterstoremanageid,jdbcType=BIGINT}, 
      #{count,jdbcType=INTEGER}, #{pronum,jdbcType=INTEGER}, #{prodeliverydate,jdbcType=TIMESTAMP}, 
      #{statecov,jdbcType=VARCHAR}, #{weight,jdbcType=VARCHAR}, #{larghezza,jdbcType=VARCHAR}, 
      #{weighttolerance,jdbcType=VARCHAR}, #{lossrate,jdbcType=VARCHAR}, #{color,jdbcType=VARCHAR}, 
      #{isbatchcharge,jdbcType=VARCHAR}, #{announcements,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{graynum,jdbcType=INTEGER}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.manage.domain.Production" useGeneratedKeys="true">
    insert into production
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="payorderid != null">
        payOrderId,
      </if>
      <if test="customerid != null">
        customerId,
      </if>
      <if test="productid != null">
        productId,
      </if>
      <if test="cargotypeid != null">
        cargoTypeId,
      </if>
      <if test="productiontypeid != null">
        productionTypeId,
      </if>
      <if test="flowid != null">
        flowId,
      </if>
      <if test="factoryid != null">
        factoryId,
      </if>
      <if test="productionmanageid != null">
        productionManageId,
      </if>
      <if test="enterstoremanageid != null">
        enterStoreManageId,
      </if>
      <if test="count != null">
        `count`,
      </if>
      <if test="pronum != null">
        proNum,
      </if>
      <if test="prodeliverydate != null">
        proDeliveryDate,
      </if>
      <if test="statecov != null">
        stateCov,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="larghezza != null">
        larghezza,
      </if>
      <if test="weighttolerance != null">
        weightTolerance,
      </if>
      <if test="lossrate != null">
        lossRate,
      </if>
      <if test="color != null">
        color,
      </if>
      <if test="isbatchcharge != null">
        isBatchCharge,
      </if>
      <if test="announcements != null">
        announcements,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="graynum != null">
        grayNum,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="payorderid != null">
        #{payorderid,jdbcType=BIGINT},
      </if>
      <if test="customerid != null">
        #{customerid,jdbcType=BIGINT},
      </if>
      <if test="productid != null">
        #{productid,jdbcType=BIGINT},
      </if>
      <if test="cargotypeid != null">
        #{cargotypeid,jdbcType=BIGINT},
      </if>
      <if test="productiontypeid != null">
        #{productiontypeid,jdbcType=BIGINT},
      </if>
      <if test="flowid != null">
        #{flowid,jdbcType=BIGINT},
      </if>
      <if test="factoryid != null">
        #{factoryid,jdbcType=BIGINT},
      </if>
      <if test="productionmanageid != null">
        #{productionmanageid,jdbcType=BIGINT},
      </if>
      <if test="enterstoremanageid != null">
        #{enterstoremanageid,jdbcType=BIGINT},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="pronum != null">
        #{pronum,jdbcType=INTEGER},
      </if>
      <if test="prodeliverydate != null">
        #{prodeliverydate,jdbcType=TIMESTAMP},
      </if>
      <if test="statecov != null">
        #{statecov,jdbcType=VARCHAR},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=VARCHAR},
      </if>
      <if test="larghezza != null">
        #{larghezza,jdbcType=VARCHAR},
      </if>
      <if test="weighttolerance != null">
        #{weighttolerance,jdbcType=VARCHAR},
      </if>
      <if test="lossrate != null">
        #{lossrate,jdbcType=VARCHAR},
      </if>
      <if test="color != null">
        #{color,jdbcType=VARCHAR},
      </if>
      <if test="isbatchcharge != null">
        #{isbatchcharge,jdbcType=VARCHAR},
      </if>
      <if test="announcements != null">
        #{announcements,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="graynum != null">
        #{graynum,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.manage.mapper.ProductionExample" resultType="java.lang.Long">
    select count(*) from production
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update production
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.payorderid != null">
        payOrderId = #{record.payorderid,jdbcType=BIGINT},
      </if>
      <if test="record.customerid != null">
        customerId = #{record.customerid,jdbcType=BIGINT},
      </if>
      <if test="record.productid != null">
        productId = #{record.productid,jdbcType=BIGINT},
      </if>
      <if test="record.cargotypeid != null">
        cargoTypeId = #{record.cargotypeid,jdbcType=BIGINT},
      </if>
      <if test="record.productiontypeid != null">
        productionTypeId = #{record.productiontypeid,jdbcType=BIGINT},
      </if>
      <if test="record.flowid != null">
        flowId = #{record.flowid,jdbcType=BIGINT},
      </if>
      <if test="record.factoryid != null">
        factoryId = #{record.factoryid,jdbcType=BIGINT},
      </if>
      <if test="record.productionmanageid != null">
        productionManageId = #{record.productionmanageid,jdbcType=BIGINT},
      </if>
      <if test="record.enterstoremanageid != null">
        enterStoreManageId = #{record.enterstoremanageid,jdbcType=BIGINT},
      </if>
      <if test="record.count != null">
        `count` = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.pronum != null">
        proNum = #{record.pronum,jdbcType=INTEGER},
      </if>
      <if test="record.prodeliverydate != null">
        proDeliveryDate = #{record.prodeliverydate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.statecov != null">
        stateCov = #{record.statecov,jdbcType=VARCHAR},
      </if>
      <if test="record.weight != null">
        weight = #{record.weight,jdbcType=VARCHAR},
      </if>
      <if test="record.larghezza != null">
        larghezza = #{record.larghezza,jdbcType=VARCHAR},
      </if>
      <if test="record.weighttolerance != null">
        weightTolerance = #{record.weighttolerance,jdbcType=VARCHAR},
      </if>
      <if test="record.lossrate != null">
        lossRate = #{record.lossrate,jdbcType=VARCHAR},
      </if>
      <if test="record.color != null">
        color = #{record.color,jdbcType=VARCHAR},
      </if>
      <if test="record.isbatchcharge != null">
        isBatchCharge = #{record.isbatchcharge,jdbcType=VARCHAR},
      </if>
      <if test="record.announcements != null">
        announcements = #{record.announcements,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.graynum != null">
        grayNum = #{record.graynum,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update production
    set id = #{record.id,jdbcType=BIGINT},
      payOrderId = #{record.payorderid,jdbcType=BIGINT},
      customerId = #{record.customerid,jdbcType=BIGINT},
      productId = #{record.productid,jdbcType=BIGINT},
      cargoTypeId = #{record.cargotypeid,jdbcType=BIGINT},
      productionTypeId = #{record.productiontypeid,jdbcType=BIGINT},
      flowId = #{record.flowid,jdbcType=BIGINT},
      factoryId = #{record.factoryid,jdbcType=BIGINT},
      productionManageId = #{record.productionmanageid,jdbcType=BIGINT},
      enterStoreManageId = #{record.enterstoremanageid,jdbcType=BIGINT},
      `count` = #{record.count,jdbcType=INTEGER},
      proNum = #{record.pronum,jdbcType=INTEGER},
      proDeliveryDate = #{record.prodeliverydate,jdbcType=TIMESTAMP},
      stateCov = #{record.statecov,jdbcType=VARCHAR},
      weight = #{record.weight,jdbcType=VARCHAR},
      larghezza = #{record.larghezza,jdbcType=VARCHAR},
      weightTolerance = #{record.weighttolerance,jdbcType=VARCHAR},
      lossRate = #{record.lossrate,jdbcType=VARCHAR},
      color = #{record.color,jdbcType=VARCHAR},
      isBatchCharge = #{record.isbatchcharge,jdbcType=VARCHAR},
      announcements = #{record.announcements,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      grayNum = #{record.graynum,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.manage.domain.Production">
    update production
    <set>
      <if test="payorderid != null">
        payOrderId = #{payorderid,jdbcType=BIGINT},
      </if>
      <if test="customerid != null">
        customerId = #{customerid,jdbcType=BIGINT},
      </if>
      <if test="productid != null">
        productId = #{productid,jdbcType=BIGINT},
      </if>
      <if test="cargotypeid != null">
        cargoTypeId = #{cargotypeid,jdbcType=BIGINT},
      </if>
      <if test="productiontypeid != null">
        productionTypeId = #{productiontypeid,jdbcType=BIGINT},
      </if>
      <if test="flowid != null">
        flowId = #{flowid,jdbcType=BIGINT},
      </if>
      <if test="factoryid != null">
        factoryId = #{factoryid,jdbcType=BIGINT},
      </if>
      <if test="productionmanageid != null">
        productionManageId = #{productionmanageid,jdbcType=BIGINT},
      </if>
      <if test="enterstoremanageid != null">
        enterStoreManageId = #{enterstoremanageid,jdbcType=BIGINT},
      </if>
      <if test="count != null">
        `count` = #{count,jdbcType=INTEGER},
      </if>
      <if test="pronum != null">
        proNum = #{pronum,jdbcType=INTEGER},
      </if>
      <if test="prodeliverydate != null">
        proDeliveryDate = #{prodeliverydate,jdbcType=TIMESTAMP},
      </if>
      <if test="statecov != null">
        stateCov = #{statecov,jdbcType=VARCHAR},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=VARCHAR},
      </if>
      <if test="larghezza != null">
        larghezza = #{larghezza,jdbcType=VARCHAR},
      </if>
      <if test="weighttolerance != null">
        weightTolerance = #{weighttolerance,jdbcType=VARCHAR},
      </if>
      <if test="lossrate != null">
        lossRate = #{lossrate,jdbcType=VARCHAR},
      </if>
      <if test="color != null">
        color = #{color,jdbcType=VARCHAR},
      </if>
      <if test="isbatchcharge != null">
        isBatchCharge = #{isbatchcharge,jdbcType=VARCHAR},
      </if>
      <if test="announcements != null">
        announcements = #{announcements,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="graynum != null">
        grayNum = #{graynum,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.manage.domain.Production">
    update production
    set payOrderId = #{payorderid,jdbcType=BIGINT},
      customerId = #{customerid,jdbcType=BIGINT},
      productId = #{productid,jdbcType=BIGINT},
      cargoTypeId = #{cargotypeid,jdbcType=BIGINT},
      productionTypeId = #{productiontypeid,jdbcType=BIGINT},
      flowId = #{flowid,jdbcType=BIGINT},
      factoryId = #{factoryid,jdbcType=BIGINT},
      productionManageId = #{productionmanageid,jdbcType=BIGINT},
      enterStoreManageId = #{enterstoremanageid,jdbcType=BIGINT},
      `count` = #{count,jdbcType=INTEGER},
      proNum = #{pronum,jdbcType=INTEGER},
      proDeliveryDate = #{prodeliverydate,jdbcType=TIMESTAMP},
      stateCov = #{statecov,jdbcType=VARCHAR},
      weight = #{weight,jdbcType=VARCHAR},
      larghezza = #{larghezza,jdbcType=VARCHAR},
      weightTolerance = #{weighttolerance,jdbcType=VARCHAR},
      lossRate = #{lossrate,jdbcType=VARCHAR},
      color = #{color,jdbcType=VARCHAR},
      isBatchCharge = #{isbatchcharge,jdbcType=VARCHAR},
      announcements = #{announcements,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      grayNum = #{graynum,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="findCountByStatus" parameterType="java.lang.Integer" resultType="java.lang.Long">
    select count(*)
    from production p
    where p.status =#{status}
  </select>
  <select id="findPageByStatus" resultType="com.example.manage.domain.Production">
    select *
    from production p
    where p.status =#{status}
    limit #{pageRequest.offset}, #{pageRequest.pageSize}
  </select>

</mapper>