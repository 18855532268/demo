<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.manage.mapper.PaymentrecordMapper">
    <resultMap id="BaseResultMap" type="com.example.manage.domain.Paymentrecord">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="purchaseId" jdbcType="BIGINT" property="purchaseid"/>
        <result column="payMoney" jdbcType="VARCHAR" property="paymoney"/>
        <result column="payRental" jdbcType="VARCHAR" property="payrental"/>
        <result column="debt" jdbcType="VARCHAR" property="debt"/>
        <result column="payeeName" jdbcType="VARCHAR" property="payeename"/>
        <result column="payeeType" jdbcType="VARCHAR" property="payeetype"/>
        <result column="payeeCard" jdbcType="VARCHAR" property="payeecard"/>
        <result column="payeeRemark" jdbcType="VARCHAR" property="payeeremark"/>
        <result column="payDate" jdbcType="TIMESTAMP" property="paydate"/>
        <result column="payAccount" jdbcType="VARCHAR" property="payaccount"/>
        <result column="items" jdbcType="VARCHAR" property="items"/>
        <result column="imgUrl" jdbcType="VARCHAR" property="imgurl"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, purchaseId, payMoney, payRental, debt, payeeName, payeeType, payeeCard, payeeRemark, 
    payDate, payAccount, items, imgUrl, remark
  </sql>
    <select id="selectByExample" parameterType="com.example.manage.mapper.PaymentrecordExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from paymentrecord
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from paymentrecord
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from paymentrecord
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.example.manage.mapper.PaymentrecordExample">
        delete from paymentrecord
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.manage.domain.Paymentrecord"
            useGeneratedKeys="true">
    insert into paymentrecord (purchaseId, payMoney, payRental, 
      debt, payeeName, payeeType, 
      payeeCard, payeeRemark, payDate, 
      payAccount, items, imgUrl, 
      remark)
    values (#{purchaseid,jdbcType=BIGINT}, #{paymoney,jdbcType=VARCHAR}, #{payrental,jdbcType=VARCHAR}, 
      #{debt,jdbcType=VARCHAR}, #{payeename,jdbcType=VARCHAR}, #{payeetype,jdbcType=VARCHAR}, 
      #{payeecard,jdbcType=VARCHAR}, #{payeeremark,jdbcType=VARCHAR}, #{paydate,jdbcType=TIMESTAMP}, 
      #{payaccount,jdbcType=VARCHAR}, #{items,jdbcType=VARCHAR}, #{imgurl,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.manage.domain.Paymentrecord"
            useGeneratedKeys="true">
        insert into paymentrecord
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="purchaseid != null">
                purchaseId,
            </if>
            <if test="paymoney != null">
                payMoney,
            </if>
            <if test="payrental != null">
                payRental,
            </if>
            <if test="debt != null">
                debt,
            </if>
            <if test="payeename != null">
                payeeName,
            </if>
            <if test="payeetype != null">
                payeeType,
            </if>
            <if test="payeecard != null">
                payeeCard,
            </if>
            <if test="payeeremark != null">
                payeeRemark,
            </if>
            <if test="paydate != null">
                payDate,
            </if>
            <if test="payaccount != null">
                payAccount,
            </if>
            <if test="items != null">
                items,
            </if>
            <if test="imgurl != null">
                imgUrl,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="purchaseid != null">
                #{purchaseid,jdbcType=BIGINT},
            </if>
            <if test="paymoney != null">
                #{paymoney,jdbcType=VARCHAR},
            </if>
            <if test="payrental != null">
                #{payrental,jdbcType=VARCHAR},
            </if>
            <if test="debt != null">
                #{debt,jdbcType=VARCHAR},
            </if>
            <if test="payeename != null">
                #{payeename,jdbcType=VARCHAR},
            </if>
            <if test="payeetype != null">
                #{payeetype,jdbcType=VARCHAR},
            </if>
            <if test="payeecard != null">
                #{payeecard,jdbcType=VARCHAR},
            </if>
            <if test="payeeremark != null">
                #{payeeremark,jdbcType=VARCHAR},
            </if>
            <if test="paydate != null">
                #{paydate,jdbcType=TIMESTAMP},
            </if>
            <if test="payaccount != null">
                #{payaccount,jdbcType=VARCHAR},
            </if>
            <if test="items != null">
                #{items,jdbcType=VARCHAR},
            </if>
            <if test="imgurl != null">
                #{imgurl,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.example.manage.mapper.PaymentrecordExample"
            resultType="java.lang.Long">
        select count(*) from paymentrecord
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update paymentrecord
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.purchaseid != null">
                purchaseId = #{record.purchaseid,jdbcType=BIGINT},
            </if>
            <if test="record.paymoney != null">
                payMoney = #{record.paymoney,jdbcType=VARCHAR},
            </if>
            <if test="record.payrental != null">
                payRental = #{record.payrental,jdbcType=VARCHAR},
            </if>
            <if test="record.debt != null">
                debt = #{record.debt,jdbcType=VARCHAR},
            </if>
            <if test="record.payeename != null">
                payeeName = #{record.payeename,jdbcType=VARCHAR},
            </if>
            <if test="record.payeetype != null">
                payeeType = #{record.payeetype,jdbcType=VARCHAR},
            </if>
            <if test="record.payeecard != null">
                payeeCard = #{record.payeecard,jdbcType=VARCHAR},
            </if>
            <if test="record.payeeremark != null">
                payeeRemark = #{record.payeeremark,jdbcType=VARCHAR},
            </if>
            <if test="record.paydate != null">
                payDate = #{record.paydate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.payaccount != null">
                payAccount = #{record.payaccount,jdbcType=VARCHAR},
            </if>
            <if test="record.items != null">
                items = #{record.items,jdbcType=VARCHAR},
            </if>
            <if test="record.imgurl != null">
                imgUrl = #{record.imgurl,jdbcType=VARCHAR},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update paymentrecord
        set id = #{record.id,jdbcType=BIGINT},
        purchaseId = #{record.purchaseid,jdbcType=BIGINT},
        payMoney = #{record.paymoney,jdbcType=VARCHAR},
        payRental = #{record.payrental,jdbcType=VARCHAR},
        debt = #{record.debt,jdbcType=VARCHAR},
        payeeName = #{record.payeename,jdbcType=VARCHAR},
        payeeType = #{record.payeetype,jdbcType=VARCHAR},
        payeeCard = #{record.payeecard,jdbcType=VARCHAR},
        payeeRemark = #{record.payeeremark,jdbcType=VARCHAR},
        payDate = #{record.paydate,jdbcType=TIMESTAMP},
        payAccount = #{record.payaccount,jdbcType=VARCHAR},
        items = #{record.items,jdbcType=VARCHAR},
        imgUrl = #{record.imgurl,jdbcType=VARCHAR},
        remark = #{record.remark,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.manage.domain.Paymentrecord">
        update paymentrecord
        <set>
            <if test="purchaseid != null">
                purchaseId = #{purchaseid,jdbcType=BIGINT},
            </if>
            <if test="paymoney != null">
                payMoney = #{paymoney,jdbcType=VARCHAR},
            </if>
            <if test="payrental != null">
                payRental = #{payrental,jdbcType=VARCHAR},
            </if>
            <if test="debt != null">
                debt = #{debt,jdbcType=VARCHAR},
            </if>
            <if test="payeename != null">
                payeeName = #{payeename,jdbcType=VARCHAR},
            </if>
            <if test="payeetype != null">
                payeeType = #{payeetype,jdbcType=VARCHAR},
            </if>
            <if test="payeecard != null">
                payeeCard = #{payeecard,jdbcType=VARCHAR},
            </if>
            <if test="payeeremark != null">
                payeeRemark = #{payeeremark,jdbcType=VARCHAR},
            </if>
            <if test="paydate != null">
                payDate = #{paydate,jdbcType=TIMESTAMP},
            </if>
            <if test="payaccount != null">
                payAccount = #{payaccount,jdbcType=VARCHAR},
            </if>
            <if test="items != null">
                items = #{items,jdbcType=VARCHAR},
            </if>
            <if test="imgurl != null">
                imgUrl = #{imgurl,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.manage.domain.Paymentrecord">
    update paymentrecord
    set purchaseId = #{purchaseid,jdbcType=BIGINT},
      payMoney = #{paymoney,jdbcType=VARCHAR},
      payRental = #{payrental,jdbcType=VARCHAR},
      debt = #{debt,jdbcType=VARCHAR},
      payeeName = #{payeename,jdbcType=VARCHAR},
      payeeType = #{payeetype,jdbcType=VARCHAR},
      payeeCard = #{payeecard,jdbcType=VARCHAR},
      payeeRemark = #{payeeremark,jdbcType=VARCHAR},
      payDate = #{paydate,jdbcType=TIMESTAMP},
      payAccount = #{payaccount,jdbcType=VARCHAR},
      items = #{items,jdbcType=VARCHAR},
      imgUrl = #{imgurl,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="findPayRentalByPurchaseId" parameterType="java.lang.Long" resultType="java.lang.Long">
    select p.payMoney
    from paymentrecord p
    where p.purchaseId =#{purchaseId}
  </select>
    <select id="findPaymentRecordPage" resultType="com.example.manage.domain.Paymentrecord"
            parameterType="com.example.manage.util.PageRequest">
    select *
    from paymentrecord p
    limit #{pageRequest.offset}, #{pageRequest.pageSize}
  </select>

</mapper>