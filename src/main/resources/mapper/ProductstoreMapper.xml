<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.manage.mapper.ProductstoreMapper">
  <resultMap id="BaseResultMap" type="com.example.manage.domain.Productstore">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="productId" jdbcType="BIGINT" property="productid" />
    <result column="vatNum" jdbcType="VARCHAR" property="vatnum" />
    <result column="storeDate" jdbcType="TIMESTAMP" property="storedate" />
    <result column="weight" jdbcType="VARCHAR" property="weight" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="larghezza" jdbcType="VARCHAR" property="larghezza" />
    <result column="payOrderType" jdbcType="VARCHAR" property="payordertype" />
    <result column="reelNum" jdbcType="VARCHAR" property="reelnum" />
    <result column="productTypeId" jdbcType="BIGINT" property="producttypeid" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, productId, vatNum, storeDate, weight, `count`, larghezza, payOrderType, reelNum, 
    productTypeId, `status`
  </sql>
  <select id="selectByExample" parameterType="com.example.manage.mapper.ProductstoreExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from productstore
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from productstore
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from productstore
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.manage.mapper.ProductstoreExample">
    delete from productstore
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.manage.domain.Productstore" useGeneratedKeys="true">
    insert into productstore (productId, vatNum, storeDate, 
      weight, `count`, larghezza, 
      payOrderType, reelNum, productTypeId, 
      `status`)
    values (#{productid,jdbcType=BIGINT}, #{vatnum,jdbcType=VARCHAR}, #{storedate,jdbcType=TIMESTAMP}, 
      #{weight,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER}, #{larghezza,jdbcType=VARCHAR}, 
      #{payordertype,jdbcType=VARCHAR}, #{reelnum,jdbcType=VARCHAR}, #{producttypeid,jdbcType=BIGINT}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.manage.domain.Productstore" useGeneratedKeys="true">
    insert into productstore
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productid != null">
        productId,
      </if>
      <if test="vatnum != null">
        vatNum,
      </if>
      <if test="storedate != null">
        storeDate,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="count != null">
        `count`,
      </if>
      <if test="larghezza != null">
        larghezza,
      </if>
      <if test="payordertype != null">
        payOrderType,
      </if>
      <if test="reelnum != null">
        reelNum,
      </if>
      <if test="producttypeid != null">
        productTypeId,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productid != null">
        #{productid,jdbcType=BIGINT},
      </if>
      <if test="vatnum != null">
        #{vatnum,jdbcType=VARCHAR},
      </if>
      <if test="storedate != null">
        #{storedate,jdbcType=TIMESTAMP},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="larghezza != null">
        #{larghezza,jdbcType=VARCHAR},
      </if>
      <if test="payordertype != null">
        #{payordertype,jdbcType=VARCHAR},
      </if>
      <if test="reelnum != null">
        #{reelnum,jdbcType=VARCHAR},
      </if>
      <if test="producttypeid != null">
        #{producttypeid,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.manage.mapper.ProductstoreExample" resultType="java.lang.Long">
    select count(*) from productstore
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update productstore
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.productid != null">
        productId = #{record.productid,jdbcType=BIGINT},
      </if>
      <if test="record.vatnum != null">
        vatNum = #{record.vatnum,jdbcType=VARCHAR},
      </if>
      <if test="record.storedate != null">
        storeDate = #{record.storedate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.weight != null">
        weight = #{record.weight,jdbcType=VARCHAR},
      </if>
      <if test="record.count != null">
        `count` = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.larghezza != null">
        larghezza = #{record.larghezza,jdbcType=VARCHAR},
      </if>
      <if test="record.payordertype != null">
        payOrderType = #{record.payordertype,jdbcType=VARCHAR},
      </if>
      <if test="record.reelnum != null">
        reelNum = #{record.reelnum,jdbcType=VARCHAR},
      </if>
      <if test="record.producttypeid != null">
        productTypeId = #{record.producttypeid,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update productstore
    set id = #{record.id,jdbcType=BIGINT},
      productId = #{record.productid,jdbcType=BIGINT},
      vatNum = #{record.vatnum,jdbcType=VARCHAR},
      storeDate = #{record.storedate,jdbcType=TIMESTAMP},
      weight = #{record.weight,jdbcType=VARCHAR},
      `count` = #{record.count,jdbcType=INTEGER},
      larghezza = #{record.larghezza,jdbcType=VARCHAR},
      payOrderType = #{record.payordertype,jdbcType=VARCHAR},
      reelNum = #{record.reelnum,jdbcType=VARCHAR},
      productTypeId = #{record.producttypeid,jdbcType=BIGINT},
      `status` = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.manage.domain.Productstore">
    update productstore
    <set>
      <if test="productid != null">
        productId = #{productid,jdbcType=BIGINT},
      </if>
      <if test="vatnum != null">
        vatNum = #{vatnum,jdbcType=VARCHAR},
      </if>
      <if test="storedate != null">
        storeDate = #{storedate,jdbcType=TIMESTAMP},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        `count` = #{count,jdbcType=INTEGER},
      </if>
      <if test="larghezza != null">
        larghezza = #{larghezza,jdbcType=VARCHAR},
      </if>
      <if test="payordertype != null">
        payOrderType = #{payordertype,jdbcType=VARCHAR},
      </if>
      <if test="reelnum != null">
        reelNum = #{reelnum,jdbcType=VARCHAR},
      </if>
      <if test="producttypeid != null">
        productTypeId = #{producttypeid,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.manage.domain.Productstore">
    update productstore
    set productId = #{productid,jdbcType=BIGINT},
      vatNum = #{vatnum,jdbcType=VARCHAR},
      storeDate = #{storedate,jdbcType=TIMESTAMP},
      weight = #{weight,jdbcType=VARCHAR},
      `count` = #{count,jdbcType=INTEGER},
      larghezza = #{larghezza,jdbcType=VARCHAR},
      payOrderType = #{payordertype,jdbcType=VARCHAR},
      reelNum = #{reelnum,jdbcType=VARCHAR},
      productTypeId = #{producttypeid,jdbcType=BIGINT},
      `status` = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="findPage" parameterType="com.example.manage.util.PageRequest" resultType="com.example.manage.domain.Productstore">
    select *
    from productstore p
    limit #{pageRequest.offset}, #{pageRequest.pageSize}
  </select>
</mapper>